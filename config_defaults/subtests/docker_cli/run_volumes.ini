[docker_cli/run_volumes]
remove_after_test = yes
subsubtests = volumes_rw,volumes_one_source

[docker_cli/run_volumes/volumes_rw]
wait_stop = 5
# CSV list of host paths to check, assumes filesystem is already mounted
# for testing NFS, SMB, etc.  If using SELinux, don't forget to
# 'setsebool virt_sandbox_use_<type> on' where <type> is nfs, samba, etc.
host_paths =
# CSV list of destination paths in container cooresponding to host_paths above
# (must exactly match the number of host_paths)
cntr_paths =
# test expects CID on stdout
run_template = --cidfile="%%(cidfile)s",--volume="%%(host_path)s:%%(cntr_path)s"
cmd_template = /bin/bash -c 'cd "%%(cntr_path)s" && cat "%%(read_fn)s" | /usr/bin/md5sum >> "%%(write_fn)s"'

[docker_cli/run_volumes/volumes_one_source]
num_containers = 5
cmd_timeout = 30
# If non-empty, set this context type on host paths
# e.g. svirt_sandbox_file_t
selinux_context =
# Temp. host path created in test.  Name of path in container:
cntr_path = /run-n-volume
exec_command = /bin/bash -c 'for i in $(seq 5); do echo "%%(name)s - $i - $(date)" >> "%%(write_path)s"; sleep 1; done && /usr/bin/md5sum "%%(write_path)s"'
